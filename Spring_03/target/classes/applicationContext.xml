<?xml version="1.0" encoding="UTF-8"?>
<!-- 加入头文件 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">
	<!-- 声明一个user对象 
	id：标签在IOC容器里面的key
	class：类的完全限定名
	scope:prototpye 用户每次从IOC容器取对象都会生成一个新的对象
	默认为singleton 这个对象在IOC中只存一次,单例模式下解析时创建，多例时声明时创建
	scope:request：同一个request共享一个对象
	scope:session：同一个session共享一个对象
	name：在springmvc里面去指定controller的请求路径
	lazy-init="true/false"是否使用时创建 默认false
	-->
	<!-- 无参的构造方法 -->
	<bean id="user01" class="domain.User" scope="singleton" ></bean>
	<!-- 有参的构造方法 静态工厂 -->
<!-- 	<bean id="user02" class="domain.User" factory-method="" ></bean> -->
	<!-- 使用实例工厂 -->
	<!-- 声明 实例工厂-->
	<bean id="userFactory" class="factory.UserFactory"></bean>
	<!-- factory-bean -->
	<bean id="user03"  factory-bean="userFactory" factory-method="getUser3"></bean>
	
	<!-- 声明一个string对象 -->
	<bean id="str01" class="java.lang.String"></bean>
	<!-- 声明一个Integer对象 -->
	<bean id="int01" class="java.lang.Integer">
		<constructor-arg name="value" value="100"></constructor-arg>
	</bean>
	<!-- 声明一个Date对象 -->
	<bean id="date01" class="java.util.Date"></bean>
	<!-- 对象属性初始的方式1使用set方法 -->
	<bean id="person1" class="domain.Person">
		<property name="id" value="1"></property>
		<property name="name" value="小明"></property>
		<property name="address" value="武汉"></property>
	
	</bean>
	<!-- 使用有参构造方法注入 -->
	<bean id="person02" class="domain.Person">
		<constructor-arg index="0" value="1" type=""></constructor-arg>
		<constructor-arg index="1" value="张三"></constructor-arg>
<!-- 		<constructor-arg index="2" value="武汉"></constructor-arg> -->
		
	</bean>
</beans>
